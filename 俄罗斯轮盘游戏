#include<stdio.h>
#include<stdlib.h>
#include<time.h>
void remove(int*p,int len,int index);
int main() {
	int sm,num,t,a,*p,b=0;
	printf("请输入参与游戏的人数:\n");
	scanf("%d",&a);
	t=a;
	p = (int*)(malloc(sizeof(int)*a));//p是指向整型变量的指针
	for(int i=0; i<a; i++) {
		*(p+i)= i+1;//数组的初始化，使得p[0]=1,p[1]=2,p[2]=3...p[n]=n+1
	}
	srand(time(NULL));//随机函数的种子置为null
	for(int i=1; i<a; i++) {
		num = rand()%6+1;//产生 1~6的随机数
		sm = num;
		sm +=b;//该步骤的目的是为了实现从淘汰玩家的下一位继续开始游戏
		if(sm>t)
			sm %=t;
		if(sm==0)//为了排除当sm对t取余数时若整除，那么sm=0,sm-1为-1，而p[-1]是没有定义的这种情况
			printf("游戏第%d轮，子弹在第%d发射出，第%d号玩家被淘汰.\n剩余玩家的编号为:",i,num,p[t-1]);
		else
			printf("游戏第%d轮，子弹在第%d发射出，第%d号玩家被淘汰.\n剩余玩家的编号为:",i,num,p[sm-1]);
		remove(p,t,sm);//调用删除数组元素的函数
		t--;//用来记录数组元素的个数
		for(int j=0; j<t; j++) {
			printf("%d ",p[j]);
		}
		printf("\n");
		b=--sm;//要保证是从被淘汰玩家的下一位开始游戏，因此要记录一下(减一是因为删除了元素)
		printf("=================================================\n");
	}
	printf("游戏结束，恭喜%d号选手存活下来了!",*p);
	return 0;
}
//实现对数组中元素的删除操作
void remove(int*p,int len,int index) {
	len--;
	index--;
	for(int i=index; i<len; i++) {
		p[i]=p[i+1];
	}
}
